% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/install_from_stages.R
\name{check_downstream}
\alias{check_downstream}
\title{Check downstream dependencies}
\usage{
check_downstream(
  project = ".",
  feature = NULL,
  downstream_repos = NULL,
  recursive = TRUE,
  dry_install_and_check = FALSE,
  verbose = 0
)
}
\arguments{
\item{project}{directory of project (for which to restore the dependencies according to feature);
must be a git repository.}

\item{feature}{feature we want to build; inferred from the branch of the project if not provided}

\item{downstream_repos}{to overwrite the downstream repos to check}

\item{recursive}{whether to recursively check downstream dependencies of the
downstream dependencies}

\item{dry_install_and_check}{whether to install upstream dependencies and run the checks;
useful to see a dry-run (it however updates the cached repos!)}

\item{verbose}{verbosity level, incremental;
(0: None, 1: packages that get installed, 2: includes git checkout)}
}
\description{
It installs the downstream dependencies and their upstream dependencies,
and then runs \code{rcmdcheck} (\verb{R CMD check}) on the downstream dependencies.
It runs recursively on the downstream dependencies, but this can be disabled.
}
\details{
Note: It runs against the remote version of project, so the project must have
been pushed before.
}
\examples{
\dontrun{
check_downstream(project = ".", verbose = 1)

check_downstream(
  project = "../stageddeps.electricity"
)
}
}
\seealso{
determine_branch
}
