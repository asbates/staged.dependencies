% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/dependencies.R
\name{check_downstream}
\alias{check_downstream}
\title{Check & install downstream dependencies}
\usage{
check_downstream(
  dep_structure,
  downstream_packages = NULL,
  distance = NULL,
  dry_install_and_check = FALSE,
  check_args = NULL,
  only_tests = FALSE,
  verbose = 0,
  install_external_deps = TRUE,
  ...
)
}
\arguments{
\item{dep_structure}{(\code{dependency_structure}) output of function
\code{dependency_table}}

\item{downstream_packages}{(\code{vector}) additional filter to only install
and check packages contained in this vector (advanced use only)}

\item{distance}{(\code{numeric}) additional filter to only install downstream
packages at most this distance from the \code{dependency_structure$current_pkg}
(advanced use only)}

\item{dry_install_and_check}{(\code{logical}) whether to install upstream
dependencies and check/test downstream repos; otherwise just reports
what would be installed}

\item{check_args}{(\code{list}) arguments passed to \code{rcmdcheck}}

\item{only_tests}{(\code{logical}) whether to only run tests (rather than checks)}

\item{verbose}{verbosity level, incremental; from 0 (none) to 2 (high)}

\item{install_external_deps}{logical to describe whether to install
external dependencies of packages using \code{remotes::install_deps}.}

\item{...}{
  Arguments passed on to \code{\link[=install_deps]{install_deps}}
  \describe{
    \item{\code{install_project}}{(\code{logical}) whether to also install the current
package (i.e. the package named in \code{dependency_structure$current_pkg})}
    \item{\code{dry_install}}{(\code{logical}) dry run that lists packages that would be
installed}
    \item{\code{install_direction}}{"upstream", "downstream" or both; which packages
to install (according to dependency structure). By default this is only "upstream"}
    \item{\code{dependency_packages}}{(\code{character}) An additional filter, only packages on this
list will be installed (advanced usage only)}
  }}
}
\value{
vector of installed packages
}
\description{
Installs downstream R packages as specified in a
\code{dependency_structure} object  and then runs
\code{rcmdcheck} (\verb{R CMD check}) on the downstream dependencies.
}
\examples{
\dontrun{
x <- dependency_table(project = ".", verbose = 1)

check_downstream(x, verbose = 1)
check_downstream(x, verbose = 1, only_test = TRUE, check_args = c("--no-manual"))
}
}
