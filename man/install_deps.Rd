% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/dependencies.R
\name{install_deps}
\alias{install_deps}
\title{Install dependencies of project}
\usage{
install_deps(
  dep_structure,
  install_project = TRUE,
  dry_install = FALSE,
  install_direction = "upstream",
  install_external_deps = TRUE,
  dependency_packages = NULL,
  verbose = 0,
  ...
)
}
\arguments{
\item{dep_structure}{(\code{dependency_structure}) output of function
\code{dependency_table}}

\item{install_project}{(\code{logical}) whether to also install the current
package (i.e. the package named in \code{dependency_structure$current_pkg})}

\item{dry_install}{(\code{logical}) dry run that lists packages that would be
installed}

\item{install_direction}{"upstream", "downstream" or both; which packages
to install (according to dependency structure). By default this is only "upstream"}

\item{install_external_deps}{logical to describe whether to install
external dependencies of packages using \code{remotes::install_deps}.}

\item{dependency_packages}{(\code{character}) An additional filter, only packages on this
list will be installed (advanced usage only)}

\item{verbose}{verbosity level, incremental; from 0 (none) to 2 (high)}

\item{...}{Additional args passed to \verb{remotes::install_deps. Note }upgrade`
is set to "never" and shouldn't be passed into this function.}
}
\value{
installed packages in installation order
}
\description{
Given a \code{dependency_structure} object, install the R packages
}
\examples{
\dontrun{
x <- dependency_table(project = "./path/to/project")

install_deps(x)

# install all dependencies
install_deps(x, direction = c("upstream", "downstream"))

}
}
\seealso{
determine_branch
}
