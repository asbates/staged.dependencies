% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/install_from_stages.R
\name{install_upstream_deps}
\alias{install_upstream_deps}
\title{Install upstream dependencies of project corresponding to feature}
\usage{
install_upstream_deps(
  project = ".",
  feature = NULL,
  install_project = TRUE,
  dry_install = FALSE,
  verbose = 0
)
}
\arguments{
\item{project}{directory of project (for which to restore the dependencies according to feature);
must be a git repository.}

\item{feature}{feature we want to build; inferred from the branch of the project if not provided}

\item{install_project}{whether to also install the current package (\code{project})}

\item{dry_install}{whether to install or just print (useful for dry-runs, but still
checks out the git repos)}

\item{verbose}{verbosity level, incremental;
(0: None, 1: packages that get installed, 2: includes git checkout)}
}
\value{
installed packages in installation order
}
\description{
This reads the upstream dependencies for the project (recursively) and
installs the right branches based on the feature.
}
\details{
It throws a warning if the currently checked out branch in the project
is not the one that would be taken based on \code{feature}. In particular,
the checked out branch should not be a remote branch.
}
\examples{
\dontrun{
install_upstream_deps()
}

}
